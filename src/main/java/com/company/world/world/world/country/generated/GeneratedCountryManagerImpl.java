package com.company.world.world.world.country.generated;

import com.company.world.world.world.country.Country;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.world.world.world.country.Country} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedCountryManagerImpl 
extends AbstractManager<Country> 
implements GeneratedCountryManager {
    
    private final TableIdentifier<Country> tableIdentifier;
    
    protected GeneratedCountryManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("world", "world", "country");
    }
    
    @Override
    public TableIdentifier<Country> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Country>> fields() {
        return Stream.of(
            Country.CODE,
            Country.NAME,
            Country.CONTINENT,
            Country.REGION,
            Country.SURFACE_AREA,
            Country.INDEP_YEAR,
            Country.POPULATION,
            Country.LIFE_EXPECTANCY,
            Country.GNP,
            Country.GNPOLD,
            Country.LOCAL_NAME,
            Country.GOVERNMENT_FORM,
            Country.HEAD_OF_STATE,
            Country.CAPITAL,
            Country.CODE2
        );
    }
    
    @Override
    public Stream<Field<Country>> primaryKeyFields() {
        return Stream.of(
            Country.CODE
        );
    }
}